# -*- coding: utf-8 -*-
"""MovieRecommendation.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1iMjd9IvesOf2uSITM9D5eplk35UyqtLv
"""

# Importing dependencies
import numpy as np
import pandas as pd
import difflib
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity

# Load dataset
movies_data = pd.read_csv('/content/movies.csv')
print("Dataset shape:", movies_data.shape)
print(movies_data.head())

# Select relevant features
selected_features = ['genres','keywords','tagline','cast','director']
for feature in selected_features:
    movies_data[feature] = movies_data[feature].fillna('')

# Combine features
combined_features = (
    movies_data['genres'] + ' ' +
    movies_data['keywords'] + ' ' +
    movies_data['tagline'] + ' ' +
    movies_data['cast'] + ' ' +
    movies_data['director']
)

# TF-IDF
vectorizer = TfidfVectorizer()
feature_vectors = vectorizer.fit_transform(combined_features)

# Cosine similarity
similarity = cosine_similarity(feature_vectors)

# Get movie name from user
movie_name = input('Enter your favourite movie name: ')
list_of_all_titles = movies_data['title'].tolist()

# Find closest match
find_close_match = difflib.get_close_matches(movie_name, list_of_all_titles)
close_match = find_close_match[0]
print("Close match found:", close_match)

# Get index of the movie
index_of_the_movie = movies_data[movies_data.title == close_match].index.values[0]

# Similarity scores
similarity_score = list(enumerate(similarity[index_of_the_movie]))
sorted_similar_movies = sorted(similarity_score, key=lambda x:x[1], reverse=True)

# Print recommendations
print('Movies suggested for you:\n')
i = 1
for movie in sorted_similar_movies:
    index = movie[0]
    title_from_index = movies_data.loc[index, 'title']
    if i < 7:  # show top 6 recommendations
        print(i, '.', title_from_index)
        i += 1